version: "3.1"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - formalizao-digital

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - formalizao-digital

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - formalizao-digital
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

#  kafka-manager:
#    container_name: kafka-manager
#    image: hlebalbau/kafka-manager:3.0.0.5
#    restart: unless-stopped
#    depends_on:
#      - zookeeper
#    networks:
#      - formalizao-digital
#    ports:
#      - "9000:9000"
#    environment:
#      ZK_HOSTS: zookeeper:2181
#      APPLICATION_SECRET: "random-secret"
#    command: -Dpidfile.path=/dev/null
#    healthcheck:
#      test: "curl -f http://localhost:9000 || exit 1"
#      #start_period: 30s

  mongo:
    image: mongo
    container_name: mongo-test
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - formalizao-digital

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017
    networks:
      - formalizao-digital

  wiremock:
    image: wiremock/wiremock:latest
    container_name: wiremock-formalizacao
    ports:
      - "9999:8080"
    volumes:
      - ./wiremock/__files/:/home/wiremock/__files/
      - ./wiremock/mappings/:/home/wiremock/mappings/
    command:
      - -global-response-templating
      - --verbose
    networks:
      - formalizao-digital




networks:
  formalizao-digital:
    driver: bridge